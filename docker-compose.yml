services:
  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: rabbitmq_broker
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
    networks:
      - taxi_network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping", "-q"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
  producer:
    build:
      context: ./producer
      dockerfile: Dockerfile.producer
    container_name: taxi_producer
    environment:
      RABBITMQ_HOST: rabbitmq
      INPUT_CSV_PATH: /archive/taxi_trip_data.csv
      CHUNK_SIZE: 100000
      EXCHANGE_NAME: taxi_exchange
      ROUTING_KEY_PROCESSOR: raw.data.processor
      ROUTING_KEY_UPLOADER: raw.data.uploader
    volumes:
      - ./archive:/archive:ro
      - ./producer:/app
    networks:
      - taxi_network
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure
  postgres:
    image: postgres:16-alpine
    container_name: postgres_db
    hostname: postgres
    environment:
      POSTGRES_USER: taxi_user
      POSTGRES_PASSWORD: taxi_password
      POSTGRES_DB: taxi_data
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - taxi_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  uploader:
    build:
      context: ./uploader
      dockerfile: Dockerfile.uploader
    container_name: taxi_uploader
    environment:
      RABBITMQ_HOST: rabbitmq
      PRODUCER_FANOUT_EXCHANGE_NAME: taxi_exchange
      UPLOADER_RAW_QUEUE_NAME: uploader_raw_data_queue
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: taxi_data
      POSTGRES_USER: taxi_user
      POSTGRES_PASSWORD: taxi_password
      PROCESSED_EXCHANGE: processed_exchange
      PROCESSED_QUEUE: uploader_processed_data_queue
      PROCESSED_TABLE: processed_taxi_trips
    volumes:
      - ./uploader:/app
    networks:
      - taxi_network
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: on-failure
  processor:
    build:
      context: ./processor
      dockerfile: Dockerfile.processor
    container_name: taxi_processor
    environment:
      RABBITMQ_HOST: rabbitmq
      FANOUT_EXCHANGE: taxi_exchange
      RAW_QUEUE: processor_raw_data_queue
      PROC_EXCHANGE: processed_exchange
      ROUTING_KEY_UPLOADER: processed.data.uploader
    volumes:
      - ./archive:/archive:ro
      - ./processor:/app
    networks:
      - taxi_network
    depends_on:
      rabbitmq:
        condition: service_healthy


networks:
  taxi_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  rabbitmq_data:
    driver: local

